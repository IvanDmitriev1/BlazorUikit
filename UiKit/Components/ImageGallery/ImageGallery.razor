@namespace UiKit.Components
@inherits UiKitComponentBase

<Stack Class="@ComponentCss" Direction="Direction.Column" AlignItems="AlignItems.Center">
    @if (_selectedImageUrl is not null)
    {
        <Image Src="@_selectedImageUrl" Class="cursor-pointer" />
    }
    else
    {
        <Skeleton Class="h-[425px]" FullWidth="true" />
    }

    @if (ImagesUrls is not null)
    {
        <UiList T="string" Direction="Direction.Row" Class="!bg-inherit gap-3 md:justify-between flex-wrap md:flex-nowrap" @bind-SelectedValue="_selectedImageUrl">
            @foreach (var imageUrl in ImagesUrls)
            {
                <ImageGalleryItem Value="@imageUrl">
                    <Image Src="@_selectedImageUrl" Class="w-[130px]"/>
                </ImageGalleryItem>
            }
        </UiList>
    }
    else
    {
        <Stack Direction="Direction.Row" Class="gap-3 md:justify-between flex-wrap md:flex-nowrap">
            <Skeleton Class="h-[65px] w-[115px]"/>
            <Skeleton Class="h-[65px] w-[115px]"/>
            <Skeleton Class="h-[65px] w-[115px]"/>
            <Skeleton Class="h-[65px] w-[115px]"/>
        </Stack>
    }
</Stack>


@code {

    [Parameter, EditorRequired]
    public IReadOnlyList<string>? ImagesUrls { get; set; }

    string? _selectedImageUrl;

    protected override void AddComponentCssClasses(ref CssBuilder cssBuilder)
    {
        cssBuilder.AddClass("gap-2.5");
    }

    protected override void OnInitialized()
    {
        if (ImagesUrls is not null && ImagesUrls.Count > 0)
        {
            _selectedImageUrl = ImagesUrls[0];
        }
    }
}
