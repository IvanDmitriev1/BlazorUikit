@namespace UiKit.Components
@inherits UiKitRenderComponentBase
@implements IDisposable

@inject IDialogService DialogService

@foreach (var (key, dialogReference) in _dialogByGuid)
{
    <DialogInstance @key="key" DialogReference="dialogReference"/>
}

@code
{
    readonly Dictionary<Guid, IDialogReferenceBase> _dialogByGuid = new();

    protected override void AddComponentCssClasses(ref CssBuilder cssBuilder) { }

    public void Dispose()
    {
        DialogService.ClearAllHandlers();
    }

    protected override void OnInitialized()
    {
        DialogService.RegisterHandlers(AddDialogHandler, RemoveDialogHandler);
    }

    private ValueTask OnLocationChanging(LocationChangingContext arg)
    {
        if (_dialogByGuid.Count > 0)
            return ValueTask.CompletedTask;

        foreach (var (_, dialogReferenceBase) in _dialogByGuid)
        {
            dialogReferenceBase.Cancel();
        }

        _dialogByGuid.Clear();
        StateHasChanged();

        return ValueTask.CompletedTask;
    }

    private void RemoveDialogHandler(Guid id)
    {
        if (!_dialogByGuid.ContainsKey(id))
            return;

        _dialogByGuid.Remove(id);
        StateHasChangedWithRendering();
    }

    private async ValueTask AddDialogHandler(IDialogReferenceBase dialogReference)
    {
        _dialogByGuid.Add(dialogReference.Id, dialogReference);
        await InvokeAsync(StateHasChangedWithRendering);
    }
}
