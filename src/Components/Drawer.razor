@namespace BlazorUiKit.Components
@inherits UiKitComponentBase

<div id="MainDrawerRoot">
    <Overlay Class="@OverlayClass" LockScroll="false" />
    
    <aside class="@ComponentCss" @onclick:stopPropagation="true">
        <Stack Direction="Direction.Row" Class="mb-6">
            <UiButton Icon="TablerIcon.X" Size="Size.Large" onclick="CloseDrawer('MainDrawerRoot')"/>
            <div class="grow"></div>
        </Stack>
    
        @ChildContent
    </aside>
</div>

@code {

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public RenderFragment? TopMenu { get; set; }

    private static readonly string OverlayClass = OverlayCssBuilder();

    protected override void AddComponentCssClasses(ref CssBuilder cssBuilder)
    {
        cssBuilder.AddClass("fixed h-full z-[1001]");
        cssBuilder.AddClass("inset-y-0 left-0");
        cssBuilder.AddClass("translate-x-[-1000%]");
        cssBuilder.AddClass("transform transition-transform duration-200 ease-in-out");
        cssBuilder.AddClass("p-5");
        cssBuilder.AddClass("cursor-default");
        cssBuilder.AddClass(ThemeManager.ThemeProvider.ToBorderCss(Color.Secondary));
        cssBuilder.AddClass("drop-shadow-md");
        cssBuilder.AddClass(ThemeManager.ThemeProvider.PageBackgroundCss);
    }

    protected override void OnInitialized()
    {
        CacheCss = true;
    }

    private static string OverlayCssBuilder()
    {
        using var cssBuilder = new CssBuilder(stackalloc char[128]);
        
        cssBuilder.AddClass("hidden");
        cssBuilder.AddClass("flex");
        cssBuilder.AddClass("items-left");
        cssBuilder.AddClass("cursor-pointer");
        cssBuilder.AddClass("z-[1000]");

        return cssBuilder.ToString();
    }
}
