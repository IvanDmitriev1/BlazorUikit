@namespace BlazorUiKit.Components
@inherits UiKitComponentBase
@implements IAsyncDisposable

@inject IJSRuntime JsRuntime

<div class="@ComponentCss" style="@Style" @onclick="OnClick" @onclick:stopPropagation="true">
    @ChildContent
</div>

@code{

    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    
    [Parameter]
    public string Style { get; set; } = string.Empty;

    [Parameter]
    public bool LockScroll { get; set; } = true;

    [Parameter]
    public EventCallback OnClick { get; set; }

    protected override void AddComponentCssClasses(ref CssBuilder cssBuilder)
    {
        cssBuilder.AddClass("bg-main-dark-background/60");
        cssBuilder.AddClass("fixed top-0 left-0");
        cssBuilder.AddClass("w-full h-full");
    }

    public ValueTask DisposeAsync()
    {
        if (!IsJsRuntimeAvailable || !LockScroll)
            return ValueTask.CompletedTask;

        return JsRuntime.InvokeVoidAsync("UnlockScroll");
    }

    protected override Task OnFirstRenderAsync() => LockScroll
        ? JsRuntime.InvokeVoidAsync("LockScroll").AsTask()
        : Task.CompletedTask;
}