@namespace BlazorUiKit.Components
@inherits UiKitComponentBase
@implements IAsyncDisposable

@inject IJSRuntime JsRuntime

@if (Visible)
{
    <div class="@ComponentCss"
         style="@Style"
         @onclick="OnClick"
         @onclick:stopPropagation="true"></div>
}

@code{

    [Parameter]
    public bool Visible { get; set; } = true;
    
    [Parameter]
    public bool HiddenVariant { get; set; }
    
    [Parameter]
    public string Style { get; set; } = string.Empty;

    [Parameter]
    public bool LockScroll { get; set; } = true;

    [Parameter]
    public EventCallback OnClick { get; set; }

    protected override void AddComponentCssClasses(ref CssBuilder cssBuilder)
    {
        cssBuilder.AddClass("w-full h-full");
        cssBuilder.AddClass("fixed top-0 left-0");

        cssBuilder.AddClass("bg-main-dark-background/60", !HiddenVariant);
    }

    protected override void OnInitialized()
    {
        CacheCss = true;
    }

    public ValueTask DisposeAsync()
    {
        if (!IsJsRuntimeAvailable || !LockScroll)
            return ValueTask.CompletedTask;

        return JsRuntime.InvokeVoidAsync("UnlockScroll");
    }

    protected override Task OnFirstRenderAsync() => LockScroll
        ? JsRuntime.InvokeVoidAsync("LockScroll").AsTask()
        : Task.CompletedTask;
}