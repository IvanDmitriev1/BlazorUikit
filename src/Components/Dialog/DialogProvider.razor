@namespace BlazorUiKit.Components
@inherits UiKitRenderComponentBase
@implements IDisposable

@inject IDialogService DialogService
@inject NavigationManager NavigationManager

@foreach (var (key, dialogReference) in DialogService.DialogsById)
{
    <DialogInstance @key="key" DialogReference="dialogReference"/>
}

@code
{
    IDisposable? _locationChangingRegistration;

    protected override void AddComponentCssClasses(ref CssBuilder cssBuilder) { }

    public void Refresh() => StateHasChangedWithRendering();
    public Task RefreshAsync() => InvokeAsync(StateHasChangedWithRendering);

    public void Dispose()
    {
        _locationChangingRegistration?.Dispose();
    }

    protected override void OnInitialized()
    {
        DialogService.AddDialogProvider(this);
    }

    protected override void OnFirstRender()
    {
        _locationChangingRegistration = NavigationManager.RegisterLocationChangingHandler(OnLocationChanging);
    }

    private ValueTask OnLocationChanging(LocationChangingContext arg)
    {
        if (DialogService.DialogsById.Count == 0)
            return ValueTask.CompletedTask;

        foreach (var (_, dialogReferenceBase) in DialogService.DialogsById)
        {
            dialogReferenceBase.Cancel();
        }

        return ValueTask.CompletedTask;
    }
}
