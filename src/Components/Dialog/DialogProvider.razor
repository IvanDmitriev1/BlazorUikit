@namespace BlazorUiKit.Components
@inherits UiKitRenderComponentBase

@inject IJSRuntime JsRuntime

@foreach (var (key, dialogReference) in _dialogsById)
{
    <DialogInstance DialogReference="dialogReference"/>
}

@code
{
    [CascadingParameter]
    private IDialogService DialogService { get; set; } = null!;

    public int DisplayedDialogs => _dialogsById.Count;
    
    private readonly Dictionary<Guid, IDialogReferenceBase> _dialogsById = new();
    
    protected override void AddComponentCssClasses(ref CssBuilder cssBuilder) { }
    
    protected override void OnFirstRender()
    {
        DialogService.SetDialogProvider(this);
    }

    public void AddDialog(IDialogReferenceBase dialogReference)
    {
        _dialogsById.Add(dialogReference.Id, dialogReference);
        StateHasChangedWithRendering();
    }

    public void RemoveDialog(Guid id)
    {
        if (!_dialogsById.TryGetValue(id, out _))
            return;

        _dialogsById.Remove(id);
        StateHasChangedWithRendering();
    }
}
