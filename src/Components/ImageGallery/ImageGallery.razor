@namespace UiKit.Components
@inherits UiKitComponentBase

<Stack HtmlTag="section" Class="@ComponentCss" Direction="Direction.Column" AlignItems="AlignItems.Center">
    
    <div class="p-2">
        @if (_selectedImageUrl is not null)
        {
            <Image Src="@_selectedImageUrl" Class="cursor-pointer"/>
        }
        else
        {
            <Skeleton Class="h-[425px]" FullWidth="true"/>
        }
    </div>

    @if (ShowPreviews)
    {
        <UiList T="string" Direction="Direction.Row" Class="gap-3 items-center md:justify-center flex-wrap md:flex-nowrap" @bind-SelectedValue="_selectedImageUrl">
            @foreach (var imageUrl in ImagesUrls)
            {
                <ImageGalleryItem Value="@imageUrl">
                    <Image Src="@imageUrl" Class="w-[130px] h-full"/>
                </ImageGalleryItem>
            }
        </UiList>
    }
    else
    {
        <UiList T="string" Direction="Direction.Row" Class="gap-3 items-center justify-center" @bind-SelectedValue="_selectedImageUrl">
            @foreach (var imageUrl in ImagesUrls)
            {
                <ImageGalleryIconItem Value="@imageUrl" />
            }
        </UiList>
    }
</Stack>


@code {

    [Parameter, EditorRequired]
    public IReadOnlyList<string> ImagesUrls { get; set; } = Array.Empty<string>();

    [Parameter]
    public bool ShowPreviews { get; set; }
    
    string? _selectedImageUrl;

    protected override void AddComponentCssClasses(ref CssBuilder cssBuilder)
    {
        cssBuilder.AddClass("gap-2.5");
        cssBuilder.AddClass(Color.Primary.ToBackgroundCss());
    }

    protected override void OnInitialized()
    {
        if (ImagesUrls is not null && ImagesUrls.Count > 0)
        {
            _selectedImageUrl = ImagesUrls[0];
        }
    }

    static RenderFragment ShowImagesPreviewSkeleton =>
        @<Stack Direction="Direction.Row" Class="gap-3 md:justify-between flex-wrap md:flex-nowrap">
            <Skeleton Class="h-[65px] w-[115px]"/>
            <Skeleton Class="h-[65px] w-[115px]"/>
            <Skeleton Class="h-[65px] w-[115px]"/>
            <Skeleton Class="h-[65px] w-[115px]"/>
        </Stack>;
}
