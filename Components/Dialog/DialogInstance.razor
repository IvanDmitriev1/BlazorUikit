@namespace BlazorUiKit.Components
@inherits UiKitRenderComponentBase

@inject IJSRuntime JsRuntime

<dialog @ref="_element" class="@ComponentCss" @onclose="DialogReference.Cancel">
    <CascadingValue IsFixed="true" Value="DialogReference">
        @if (DialogReference.DisplayOptions.HeadLess)
        {
            @DialogReference.DialogContent
        }
        else
        {
            <Stack Direction="Direction.Row" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Class="mb-6">
                <h3 class="text-center">@DialogReference.DisplayOptions.Title</h3>
                
                @if (DialogReference.DisplayOptions.ShowDismiss)
                {
                    <UiButton Icon="TablerIcon.X" Size="Size.Medium" @onclick="DialogReference.Cancel"></UiButton>
                }
            </Stack>
            
            @DialogReference.DialogContent
        }
    </CascadingValue>
</dialog>

@code
{
    [Parameter, EditorRequired]
    public IDialogReferenceBase DialogReference { get; set; } = null!;

    ElementReference _element;

    protected override void AddComponentCssClasses(ref CssBuilder cssBuilder)
    {
        cssBuilder.AddDialogInstanceStyle();
        cssBuilder.AddClass("animate-zoom");
        cssBuilder.AddClass(DialogReference.DisplayOptions.MaxWidthBreakpoint.ToTailwindCssMaxWidth());
    }

    protected override Task OnFirstRenderAsync() => JsRuntime.InvokeVoidAsync("OpenModalDialog", _element, DialogReference.DisplayOptions.PreventDismissOnOverlayClick).AsTask();
}
